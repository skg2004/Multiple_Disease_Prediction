# -*- coding: utf-8 -*-
"""Diabetics disease prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_477kKu20-2GwYXLnp5xhepcP_UugT70
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import pickle

#CONVERTING INTO COMMA SEPARATED VALUE FILE
dia= pd.read_csv('tri_zip/tri/diabetes.csv')

dia.shape

dia.head()

dia.isnull().sum()

"""DATA ANALYSIS AND DATA VISUALIZATION"""

dia.describe()

"""DATA PREPROCESSING"""

dia['Outcome'].value_counts()

x=dia.drop(columns='Outcome',axis=1)
y=dia['Outcome']

print(x)

print(y)

"""SPLITTING TRAINING AND TESTING DATA"""

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

print(x.shape,x_train.shape,x_test.shape)

"""TRAIN DATA"""

mod= LogisticRegression(max_iter=500)

mod.fit(x_train,y_train)

"""ACCURACY SCORE

LOGISTIC REGRESSION
"""

#accuracy on train data
x_train_prediciton= mod.predict(x_train)
training_data_accuracy= accuracy_score(x_train_prediciton,y_train)
print('accuracy on training data is:',training_data_accuracy)

#accuracy on test data
x_test_prediciton= mod.predict(x_test)
test_data_accuracy= accuracy_score(x_test_prediciton,y_test)
print('accuracy on testing data is:',test_data_accuracy)

pickle.dump(mod,open("model2.pkl","wb"))
